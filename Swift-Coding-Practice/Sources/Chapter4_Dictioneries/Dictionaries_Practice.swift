//
//  Dictionaries_Practice.swift
//  Swift-Coding-Practice
//
//  Created by –í–∞–ª–µ—Ä–∏—è –ü–æ–Ω–æ–º–∞—Ä–µ–≤–∞ on 16.09.2025.

import Foundation

public struct Chapter4_Dictionaries {
    public static func runAllTasks() {
        print("=== –ì–ª–∞–≤–∞ 4: –°–ª–æ–≤–∞—Ä–∏ ===")
        task4_1()
        task4_2()
        task4_3()
        task4_4()
        task4_5()
        // Dictionaries: Advanced Level
        task4a_1()
        task4a_2()
        task4a_3()
        task4a_4()
        task4a_5()
        
    } // –î–æ–±–∞–≤–ª—è–π –Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ —Ç—É—Ç
    
    static func task4_1() {
        print("–ó–∞–¥–∞—á–∞ 4.1: –°–æ–∑–¥–∞–π 5 —Ä–∞–∑–Ω—ã—Ö Dictionaries —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö. –û–¥–∏–Ω –∏–∑ –Ω–∏—Ö –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –í–°–ï –º–µ—Å—è—Ü—ã –≥–æ–¥–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º. –í—Ç–æ—Ä–æ–π - –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º.")
        
        let seasons = [1: "spring", 2: "summer", 3: "autumn", 4: "winter"]
        print("–í—Å–µ —Å–µ–∑–æ–Ω—ã –≥–æ–¥–∞: \(seasons)") // –í—Å–µ —Å–µ–∑–æ–Ω—ã –≥–æ–¥–∞: [2: "summer", 1: "spring", 4: "winter", 3: "autumn"]
        
        let monthsLatin = [
            1: "january",
            2: "february",
            3: "march",
            4: "april",
            5: "may",
            6: "june",
            7: "july",
            8: "august",
            9: "september",
            10: "october",
            11: "november",
            12: "december"
        ]
        
        print("–ú–µ—Å—è—Ü—ã –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º: \(monthsLatin[1] ?? "unknown")") // —Å–ª–æ–≤–∞—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç String?, –∞ –Ω–µ –º–∞—Å—Å–∏–≤. –ù—É–∂–Ω–æ ?? "unknown" –∏–ª–∏ ?? "" // –ú–µ—Å—è—Ü—ã –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º: january
        
        let monthsCirillic = [
            1: "—è–Ω–≤–∞—Ä—å",
            2: "—Ñ–µ–≤—Ä–∞–ª—å",
            3: "–º–∞—Ä—Ç",
            4: "–∞–ø—Ä–µ–ª—å",
            5: "–º–∞–π",
            6: "–∏—é–Ω—å",
            7: "–∏—é–ª—å",
            8: "–∞–≤–≥—É—Å—Ç",
            9: "—Å–µ–Ω—Ç—è–±—Ä—å",
            10: "–æ–∫—Ç—è–±—Ä—å",
            11: "–Ω–æ—è–±—Ä—å",
            12: "–¥–µ–∫–∞–±—Ä—å"
        ]
        print("–ú–µ—Å—è—Ü—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º:")
        for (number, name) in monthsCirillic.sorted(by: { $0.key < $1.key }) {
            print("\(number) - \(name)")
        } /* –ú–µ—Å—è—Ü—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º:
           1 - —è–Ω–≤–∞—Ä—å
           2 - —Ñ–µ–≤—Ä–∞–ª—å
           3 - –º–∞—Ä—Ç
           4 - –∞–ø—Ä–µ–ª—å
           5 - –º–∞–π
           6 - –∏—é–Ω—å
           7 - –∏—é–ª—å
           8 - –∞–≤–≥—É—Å—Ç
           9 - —Å–µ–Ω—Ç—è–±—Ä—å
           10 - –æ–∫—Ç—è–±—Ä—å
           11 - –Ω–æ—è–±—Ä—å
           12 - –¥–µ–∫–∞–±—Ä—å */
        
        let daysWeek = [
            "Su": "Sunday",
            "Mo": "Monday",
            "Tu": "Tuesday",
            "We": "Wednesday",
            "Th": "Thursday",
            "Fr": "Friday",
            "Sa": "Saturday"
        ]
        // –ò–ª–∏ –∫—Ä–∞—Å–∏–≤–æ:
        for (shortName, fullName) in daysWeek.sorted(by: { $0.key < $1.key }) {
            print("\(shortName) - \(fullName)")
        } /* Su: Sunday
           Mo: Monday
           Fr: Friday
           Sa: Saturday
           Tu: Tuesday
           We: Wednesday
           Th: Thursday */
        
        let monthDays = [1: 31, 2: 28, 3: 31, 4: 30] // —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        print("–î–Ω–∏ –º–µ—Å—è—Ü–∞: \(monthDays[1] ?? 0)") //
        
        let monthHasHolidays = [1: true, 2: false, 12: true] // –±—É–ª–µ–≤—ã –∑–Ω–∞—á–µ–Ω–∏—è
        print("–ï—Å—Ç—å –ª–∏ –≤ –º–µ—Å—è—Ü–µ –∫–∞–Ω–∏–∫—É–ª—ã? - \(monthHasHolidays)") // –ï—Å—Ç—å –ª–∏ –≤ –º–µ—Å—è—Ü–µ –∫–∞–Ω–∏–∫—É–ª—ã? - [2: false, 12: true, 1: true]
        
        let ukHolidays = [
            1: ["New Year's Day", "Burn's Night"],
            3: ["St. David's Day", "Mother's Day"],
            4: ["Easter", "St. George's Day"],
            5: ["May Day", "Spring Bank Holiday"],
            6: ["Queen's Official Birthday"],
            7: ["Orange Day"],
            8: ["Summer Bank Holiday"],
            11: ["Remembrance Day", "St. Andrew's Day"],
            12: ["Christmas Day", "Boxing Day"]
        ]
        let usHolidays = [
            1: ["New Year's Day", "Martin Luther King Jr. Day"],
            2: ["Presidents' Day", "Valentine's Day"],
            3: ["St. Patrick's Day"],
            5: ["Memorial Day", "Mother's Day"],
            6: ["Father's Day"],
            7: ["Independence Day"],
            9: ["Labor Day"],
            10: ["Columbus Day", "Halloween"],
            11: ["Veterans Day", "Thanksgiving"],
            12: ["Christmas Day"]
        ]
        // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤
        print("UK January: \(ukHolidays[1] ?? [])")
        // ["New Year's Day", "Burn's Night"]
        
        print("US January: \(usHolidays[1] ?? [])")
        // ["New Year's Day", "Martin Luther King Jr. Day"]
        
        // –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –±—Ä–∏—Ç–∞–Ω—Å–∫–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏
        let uniqueUK = ukHolidays.values.flatMap { $0 }.filter { !usHolidays.values.flatMap { $0 }.contains($0) }
        print("Unique UK holidays: \(uniqueUK)")
        // ["Burn's Night", "St. David's Day", "St. George's Day", "May Day", "Queen's Official Birthday", "Orange Day", "Summer Bank Holiday", "Remembrance Day", "St. Andrew's Day", "Boxing Day"]
    } // –¢–µ–ø–µ—Ä—å –≤–∏–¥–Ω–∞ –∫—É–ª—å—Ç—É—Ä–Ω–∞—è —Ä–∞–∑–Ω–∏—Ü–∞! üòäüá¨üáßüá∫üá∏
    
    static func task4_2() {
        print("–ó–∞–¥–∞—á–∞ 4.2: –°–æ–±–µ—Ä–∏ –≤—Å–µ –∫–ª—é—á–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ Dictionaries –∏ —Ä–∞—Å–ø–µ—á–∞—Ç–∞–π –≤ –∫–æ–Ω—Å–æ–ª—å.")
        
        let seasons = [1: "spring", 2: "summer", 3: "autumn", 4: "winter"]
        print("–í—Å–µ –∫–ª—é—á–∏ —Å–ª–æ–≤–∞—Ä—è - \(seasons.keys)") // –í—Å–µ –∫–ª—é—á–∏ —Å–ª–æ–≤–∞—Ä—è - [2, 3, 1, 4]
        print("–í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–æ–≤–∞—Ä—è - \(seasons.values)") // –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–æ–≤–∞—Ä—è - ["summer", "autumn", "spring", "winter"]
        
        let monthsLatin = [
            1: "january",
            2: "february",
            3: "march",
            4: "april",
            5: "may",
            6: "june",
            7: "july",
            8: "august",
            9: "september",
            10: "october",
            11: "november",
            12: "december"
        ]
        print("–í—Å–µ –∫–ª—é—á–∏ - \(monthsLatin.keys.sorted())") // –í—Å–µ –∫–ª—é—á–∏ - [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
        let sortedValues = monthsLatin.keys.sorted().compactMap { monthsLatin[$0] }
        print("–ó–Ω–∞—á–µ–Ω–∏—è –ø–æ –ø–æ—Ä—è–¥–∫—É –∫–ª—é—á–µ–π: \(sortedValues)") // –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ –ø–æ—Ä—è–¥–∫—É –∫–ª—é—á–µ–π: ["january", "february", "march", "april", "may", "june", "july", "august", "september", "october", "november", "december"]
        
        let ukHolidays = [
            1: ["New Year's Day", "Burn's Night"],
            3: ["St. David's Day", "Mother's Day"],
            4: ["Easter", "St. George's Day"],
            5: ["May Day", "Spring Bank Holiday"],
            6: ["Queen's Official Birthday"],
            7: ["Orange Day"],
            8: ["Summer Bank Holiday"],
            11: ["Remembrance Day", "St. Andrew's Day"],
            12: ["Christmas Day", "Boxing Day"]
        ]
        print("–í—Å–µ –∫–ª—é—á–∏ - \(ukHolidays.keys.sorted())") // –í—Å–µ –∫–ª—é—á–∏ - [1, 3, 4, 5, 6, 7, 8, 11, 12]
        print("–í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è - \(ukHolidays.keys.sorted().compactMap { ukHolidays[$0] })") // –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è - [["New Year\'s Day", "Burn\'s Night"], ["St. David\'s Day", "Mother\'s Day"], ["Easter", "St. George\'s Day"], ["May Day", "Spring Bank Holiday"], ["Queen\'s Official Birthday"], ["Orange Day"], ["Summer Bank Holiday"], ["Remembrance Day", "St. Andrew\'s Day"], ["Christmas Day", "Boxing Day"]]
    }
    
    static func task4_3() {
        print("–ó–∞–¥–∞—á–∞ 4.3: –°–æ–∑–¥–∞–π –ø—É—Å—Ç–æ–π Dictionary –∏ —á–µ—Ä–µ–∑ —É—Å–ª–æ–≤–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä 'if' –ø—Ä–æ–≤–µ—Ä—å –æ–Ω –ø—É—Å—Ç –∏–ª–∏ –Ω–µ—Ç. –ï—Å–ª–∏ –ø—É—Å—Ç–æ–π, —Ç–æ –≤ —É—Å–ª–æ–≤–∏–∏ –¥–æ–±–∞–≤—å –≤ –Ω–µ–≥–æ –ø–∞—Ä—É –∑–Ω–∞—á–µ–Ω–∏–π.")
        var emptyDict: [String: [String]] = [:]
        if emptyDict.isEmpty == true {
            emptyDict = [
                "Abba": ["Dancing Queen", "Money, Money, Money", "Waterloo"],
                "Boney-M": ["Daddy Cool", "Rasputin", "River of Babylon", "One-Way Ticket"]
            ]
            print("–î–æ–±–∞–≤–ª–µ–Ω—ã –∑–Ω–∞—á–µ–Ω–∏—è: \(emptyDict)") // –î–æ–±–∞–≤–ª–µ–Ω—ã –∑–Ω–∞—á–µ–Ω–∏—è: ["Boney-M": ["Daddy Cool", "Rasputin", "River of Babylon", "One-Way Ticket"], "Abba": ["Dancing Queen", "Money, Money, Money", "Waterloo"]]
        }
    }
    
    static func task4_4() {
        print("–ó–∞–¥–∞—á–∞ 4.4:–°–æ–∑–¥–∞–π —Å–ª–æ–≤–∞—Ä—å - –∫–ª—é—á '–∏–Ω–æ–º–∞—Ä–∫–∞', –∑–Ω–∞—á–µ–Ω–∏–µ - '–Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞—à–∏–Ω—ã'.")
        
        let cars = [
            "forein car": ["BMW", "Audi", "Volkswagen", "Toyota"]
        ]
        print("–ò–Ω–æ–º–∞—Ä–∫–∏: - \(cars)") // –ò–Ω–æ–º–∞—Ä–∫–∏: - ["forein car": ["BMW", "Audi", "Volkswagen", "Toyota"]]
        
    }
    static func task4_5() {
        print("–ó–∞–¥–∞—á–∞ 4.1: –î–æ–±–∞–≤—å –≤ –Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É - '–æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è'. –†–∞—Å–ø–µ—á–∞—Ç–∞–π –∫–ª—é—á–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å. –ó–∞—Ç–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ - —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏—è. –£–¥–∞–ª–∏ –∏–∑ —Å–ª–æ–≤–∞—Ä—è –∏–Ω–æ–º–∞—Ä–∫—É –ø–æ –∫–ª—é—á—É(–¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏: —á–µ—Ä–µ–∑ nil –∏ removeValue()).")
        var cars = [
            "foreign car": ["BMW", "Audi", "Volkswagen", "Toyota"]
        ]
        cars.updateValue(["Moskvich", "GAZ"], forKey: "domestic car")
        print(cars) // ["forein car": ["BMW", "Audi", "Volkswagen", "Toyota"], "domestic car": ["Moskvich", "GAZ"]]
        print(cars.values) // [["Moskvich", "GAZ"], ["BMW", "Audi", "Volkswagen", "Toyota"]]
        
        cars.removeValue(forKey: "foreign car")
        print(cars) // ["domestic car": ["Moskvich", "GAZ"]]
        
        cars.updateValue(["BMW", "Audi", "Volkswagen", "Toyota"], forKey: "foreign car")
        cars["foreign car"] = nil
        print(cars) // ["domestic car": ["Moskvich", "GAZ"]]
    }
    
    // Dictionaries: Advanced Level
    
    static func task4a_1() {
        print("–ó–∞–¥–∞—á–∞ 4a.1: –°–æ–∑–¥–∞–π —Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á - –∑–≤–∞–Ω–∏–µ –º–æ—Ä—è–∫–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ - –µ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.")
        
        let navalGreetings = [
            "Seaman": "Ahoy, Captain!",
            "Boatswain": "Aye aye, sir!",
            "Lieutenant": "Good day, Lieutenant!",
            "Captain": "Captain on deck!",
            "Admiral": "Three cheers for the Admiral!"
        ]
        
        print("–ú–æ—Ä—Å–∫–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è:")
        for (rank, greeting) in navalGreetings.sorted(by: { $0.key < $1.key }) {
            print("\(rank): \(greeting)")
        }
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: —Å–ª—É—á–∞–π–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        let randomRank = navalGreetings.keys.randomElement()!
        print("\n–°–ª—É—á–∞–π–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ:")
        print("\(randomRank): \(navalGreetings[randomRank]!)")
    }
    /*   –ó–∞–¥–∞—á–∞ 4a.1: –°–æ–∑–¥–∞–π —Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á - –∑–≤–∞–Ω–∏–µ –º–æ—Ä—è–∫–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ - –µ–≥–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.
     –ú–æ—Ä—Å–∫–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è:
     Admiral: Three cheers for the Admiral!
     Boatswain: Aye aye, sir!
     Captain: Captain on deck!
     Lieutenant: Good day, Lieutenant!
     Seaman: Ahoy, Captain!
     
     –°–ª—É—á–∞–π–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ:
     Lieutenant: Good day, Lieutenant!   */
    
    static func task4a_2() {
        print("–ó–∞–¥–∞—á–∞ 4a.2: –í —Ü–∏–∫–ª–µ –ø—Ä–æ–π–¥–∏—Å—å –ø–æ –í–°–ï–ú –∫–ª—é—á–∞–º –∏ —Ä–∞—Å–ø–µ—á–∞—Ç–∞–π –∑–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –º–æ—Ä—è–∫–∞. ")
        let navalGreetings = [
            "Seaman": "Ahoy, Captain!",
            "Boatswain": "Aye aye, sir!",
            "Lieutenant": "Good day, Lieutenant!",
            "Captain": "Captain on deck!",
            "Admiral": "Three cheers for the Admiral!"
        ]
        
        print("–ó–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –º–æ—Ä—è–∫–∞:")
        for (rank, _) in navalGreetings.sorted(by: { $0.key < $1.key }) {
            print("\(rank)")
        }
    }
    /* –ó–∞–¥–∞—á–∞ 4a.3: –í —Ü–∏–∫–ª–µ –ø—Ä–æ–π–¥–∏—Å—å –ø–æ –í–°–ï–ú –∫–ª—é—á–∞–º –∏ —Ä–∞—Å–ø–µ—á–∞—Ç–∞–π –∑–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –º–æ—Ä—è–∫–∞.
     –ó–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –º–æ—Ä—è–∫–∞:
     Admiral
     Boatswain
     Captain
     Lieutenant
     Seaman  */
    
    static func task4a_3() {
        print("–ó–∞–¥–∞—á–∞ 4a.3: –í —Ü–∏–∫–ª–µ –ø—Ä–æ–π–¥–∏—Å—å –ø–æ –í–°–ï–ú –∫–ª—é—á–∞–º –∏ —Ä–∞—Å–ø–µ—á–∞—Ç–∞–π –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–∞–∂–¥–æ–≥–æ –º–æ—Ä—è–∫–∞. ")
        let navalGreetings = [
            "Seaman": "Ahoy, Captain!",
            "Boatswain": "Aye aye, sir!",
            "Lieutenant": "Good day, Lieutenant!",
            "Captain": "Captain on deck!",
            "Admiral": "Three cheers for the Admiral!"
        ]
        
        print("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–∞–∂–¥–æ–≥–æ –º–æ—Ä—è–∫–∞:")
        for (_, greeting) in navalGreetings.sorted(by: { $0.key < $1.key }) {
            print("\(greeting)")
        }
    }
    /*  –ó–∞–¥–∞—á–∞ 4a.3: –í —Ü–∏–∫–ª–µ –ø—Ä–æ–π–¥–∏—Å—å –ø–æ –í–°–ï–ú –∫–ª—é—á–∞–º –∏ —Ä–∞—Å–ø–µ—á–∞—Ç–∞–π –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–∞–∂–¥–æ–≥–æ –º–æ—Ä—è–∫–∞.
     –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–∞–∂–¥–æ–≥–æ –º–æ—Ä—è–∫–∞:
     Ahoy, Captain!
     Good day, Lieutenant!
     Captain on deck!
     Aye aye, sir!
     Three cheers for the Admiral! */
    
    static func task4a_4() {
        print("–ó–∞–¥–∞—á–∞ 4a.4: –û—Ç—Å–æ—Ä—Ç–∏—Ä—É–π —Å–ª–æ–≤–∞—Ä—å —Ç–∞–∫, —á—Ç–æ–±—ã –∑–≤–∞–Ω–∏—è —à–ª–∏ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É.")
        
        let navalGreetings = [
            "Seaman": "Ahoy, Captain!",
            "Boatswain": "Aye aye, sir!",
            "Lieutenant": "Good day, Lieutenant!",
            "Captain": "Captain on deck!",
            "Admiral": "Three cheers for the Admiral!"
        ]
        
        print("–ó–≤–∞–Ω–∏—è –º–æ—Ä—è–∫–æ–≤ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É:")
        for (ranc, _) in navalGreetings.sorted(by: { $0.key.first ?? " " < $1.key.first ?? " " }) {
            print("\(ranc)")
        }
    }
    /* –ó–∞–¥–∞—á–∞ 4a.4: –û—Ç—Å–æ—Ä—Ç–∏—Ä—É–π —Å–ª–æ–≤–∞—Ä—å —Ç–∞–∫, —á—Ç–æ–±—ã –∑–≤–∞–Ω–∏—è —à–ª–∏ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É.
     –ó–≤–∞–Ω–∏—è –º–æ—Ä—è–∫–æ–≤ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É:
     Admiral
     Boatswain
     Captain
     Lieutenant
     Seaman */
    
    static func task4a_5() {
        print("–ó–∞–¥–∞—á–∞ 4a.5: –°–æ–∑–¥–∞–π –ª–æ–≥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É: –µ—Å–ª–∏ –∫–ª—é—á —Å–ª–æ–≤–∞—Ä—è - –∞–¥–º–∏—Ä–∞–ª, —Ç–æ —Å–∫–∞–∂–∏, —á—Ç–æ —ç—Ç–æ –∞–¥–º–∏—Ä–∞–ª. –°–¥–µ–ª–∞–π —Ç–æ–∂–µ —Å–∞–º–æ–µ —Å–æ –í–°–ï–ú–ò –∫–ª—é—á–∞–º–∏.")
        let navalGreetings = [
            "Seaman": "Ahoy, Captain!",
            "Boatswain": "Aye aye, sir!",
            "Lieutenant": "Good day, Lieutenant!",
            "Captain": "Captain on deck!",
            "Admiral": "Three cheers for the Admiral!"
        ]
        for (rank, _) in navalGreetings {
            if rank == "Admiral" {
                print("–≠—Ç–æ –∞–¥–º–∏—Ä–∞–ª")
            } else if rank == "Lieutenant" {
                    print("–≠—Ç–æ –ª–µ–π—Ç–µ–Ω–∞–Ω—Ç")
            } else if rank == "Captain" {
                print("–≠—Ç–æ –∫–∞–ø–∏—Ç–∞–Ω")
            } else if rank == "Boatswain" {
                print("–≠—Ç–æ –±–æ—Ü–º–∞–Ω")
            } else {
                print("–≠—Ç–æ –º–∞—Ç—Ä–æ—Å")
            }
            
            for (rank, _) in navalGreetings {
                switch rank {
                case "Admiral": print("–≠—Ç–æ –∞–¥–º–∏—Ä–∞–ª")
                case "Lieutenant": print("–≠—Ç–æ –ª–µ–π—Ç–µ–Ω–∞–Ω—Ç")
                case "Captain": print("–≠—Ç–æ –∫–∞–ø–∏—Ç–∞–Ω")
                case "Boatswain": print("–≠—Ç–æ –±–æ—Ü–º–∞–Ω")
                default: print("–≠—Ç–æ –º–∞—Ç—Ä–æ—Å")
                }
            }
        }
    }
}
    /* –ó–∞–¥–∞—á–∞ 4a.5: –°–æ–∑–¥–∞–π –ª–æ–≥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É: –µ—Å–ª–∏ –∫–ª—é—á —Å–ª–æ–≤–∞—Ä—è - –∞–¥–º–∏—Ä–∞–ª, —Ç–æ —Å–∫–∞–∂–∏, —á—Ç–æ —ç—Ç–æ –∞–¥–º–∏—Ä–∞–ª. –°–¥–µ–ª–∞–π —Ç–æ–∂–µ —Å–∞–º–æ–µ —Å–æ –í–°–ï–ú–ò –∫–ª—é—á–∞–º–∏.
     –û—à–∏–±–∫–∞
     –û—à–∏–±–∫–∞
     –û—à–∏–±–∫–∞
     –û—à–∏–±–∫–∞
     –≠—Ç–æ –∞–¥–º–∏—Ä–∞–ª
     
     –ó–∞–¥–∞—á–∞ 4a.5: –°–æ–∑–¥–∞–π –ª–æ–≥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É: –µ—Å–ª–∏ –∫–ª—é—á —Å–ª–æ–≤–∞—Ä—è - –∞–¥–º–∏—Ä–∞–ª, —Ç–æ —Å–∫–∞–∂–∏, —á—Ç–æ —ç—Ç–æ –∞–¥–º–∏—Ä–∞–ª. –°–¥–µ–ª–∞–π —Ç–æ–∂–µ —Å–∞–º–æ–µ —Å–æ –í–°–ï–ú–ò –∫–ª—é—á–∞–º–∏.
     –≠—Ç–æ –±–æ—Ü–º–∞–Ω
     –≠—Ç–æ –ª–µ–π—Ç–µ–Ω–∞–Ω—Ç
     –≠—Ç–æ –∞–¥–º–∏—Ä–∞–ª
     –≠—Ç–æ –º–∞—Ç—Ä–æ—Å
     –≠—Ç–æ –∫–∞–ø–∏—Ç–∞–Ω    */


