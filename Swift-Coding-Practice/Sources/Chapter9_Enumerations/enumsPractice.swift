//
//  enumsPractice.swift
//  Swift-Coding-Practice
//
//  Created by –í–∞–ª–µ—Ä–∏—è –ü–æ–Ω–æ–º–∞—Ä–µ–≤–∞ on 13.10.2025.
//

import Foundation

public struct Chapter9_Enumerations {
    public static func runAllTasks() {
        print("=== –ì–ª–∞–≤–∞ 9: –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è ===")
        
        task9_1()
        task9_2()
        task9_2a()
        task9_2b()
        task9_2c()
        task9_2d()
        task9_2e()
        task9_2f()
        task9_2g()
        task9_2h()
        task9_2i()
        task9_2g()
        task9_2h()
        task9_2j()
        task9_3()
        task9_4()
    }
    
    static func task9_1() {
        print("–ó–∞–¥–∞—á–∞ 9.1: –ù–∞–ø–∏—à–∏, –∫–∞–∫ –ø–æ–Ω–∏–º–∞–µ—à—å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è: —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ, –≤ —á–µ–º –∏—Ö —Å–º—ã—Å–ª, –∑–∞—á–µ–º –Ω—É–∂–Ω—ã? –ö–∞–∫ –∏ –≥–¥–µ –∏—Ö –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?")
    }
    static func task9_2() {
        print("–ó–∞–¥–∞—á–∞ 9.2: –ù–∞–ø–∏—à–∏ 5-10 enum —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ + —Å–æ–∑–¥–∞–π –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ —Å–≤–æ–∏—Ö enums. –ì–ª–∞–≤–Ω–æ–µ: —Å–æ–±–ª—é–¥–∞–π –ø—Ä–∞–≤–∏–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–∏—è - –ø–æ–Ω—è—Ç–Ω–æ—Å—Ç—å + –ó–ê–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞ –≤ –Ω–∞—á–∞–ª–µ –Ω–∞–∑–≤–∞–Ω–∏—è. –ü—Ä–æ–ø—É—Å—Ç–∏ —á–µ—Ä–µ–∑ switch –∏ —Ä–∞—Å–ø–µ—á–∞—Ç–∞–π.")
    }
    
    static func task9_2a() {
        print("–ó–∞–¥–∞—á–∞ 9.2a: –°–æ–∑–¥–∞–π enum –¥–ª—è –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏ –∏ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–µ–Ω—å –≤—ã—Ö–æ–¥–Ω—ã–º?")
        
        enum Weekday {
            case monday
            case tuesday
            case wednesday
            case thursday
            case friday
            case saturday
            case sunday
        }
        func isWeekend(day: Weekday) -> Bool {
            switch day {
            case .saturday, .sunday:
                return true
            default:
                return false
            }
        }
        // –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–µ–º –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
        let days: [Weekday] = [.monday, .tuesday, .wednesday, .thursday, .friday, .saturday, .sunday]
        
        for day in days {
            print("\(day) - –≤—ã—Ö–æ–¥–Ω–æ–π: \(isWeekend(day: day))")
        }
        /*  monday - –≤—ã—Ö–æ–¥–Ω–æ–π: false
         tuesday - –≤—ã—Ö–æ–¥–Ω–æ–π: false
         wednesday - –≤—ã—Ö–æ–¥–Ω–æ–π: false
         thursday - –≤—ã—Ö–æ–¥–Ω–æ–π: false
         friday - –≤—ã—Ö–æ–¥–Ω–æ–π: false
         saturday - –≤—ã—Ö–æ–¥–Ω–æ–π: true
         sunday - –≤—ã—Ö–æ–¥–Ω–æ–π: true    */
    }
    
    static func task9_2b() {
        print("–ó–∞–¥–∞—á–∞ 9.2b: –°–æ–∑–¥–∞–π enum –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤ –∏ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç HEX-–∫–æ–¥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ü–≤–µ—Ç–∞")
        enum Color {
            case red
            case green
            case white
            case orange
            case blue
        }
        func getHexCode(color: Color) -> String {
            switch color {
            case .red:
                return "#FF0000"
            case .green:
                return "#00FF00"
            case .white:
                return "#FFFFFF"
            case .orange:
                return "#FFA500"
            case .blue:
                return "#0000FF"
            }
        }
        // –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–µ–º —Ü–≤–µ—Ç–∞
        let colors: [Color] = [.red, .green, .white, .orange, .blue]
        
        for color in colors {
            let emoji: String
            switch color {
            case .red: emoji = "üî¥"
            case .green: emoji = "üü¢"
            case .white: emoji = "‚ö™"
            case .orange: emoji = "üçä"
            case .blue: emoji = "üîµ"
            }
            print("\(emoji) \(color) - HEX: \(getHexCode(color: color))")
        }
    } /* üî¥ red - HEX: #FF0000
       üü¢ green - HEX: #00FF00
       ‚ö™ white - HEX: #FFFFFF
       üçä orange - HEX: #FFA500
       üîµ blue - HEX: #0000FF   */
    
    static func task9_2c() {
        print("–ó–∞–¥–∞—á–∞ 9.2c: –°–æ–∑–¥–∞–π enum –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–∞ –∏ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞")
        
        enum OrderStatus {
            case created
            case paid
            case shipped
            case delivered
            case cancelled
        }
        
        func getStatusDescription(status: OrderStatus) -> String {
            switch status { // –¥–ª—è –∫–∞–∂–¥–æ–≥–æ case –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
            case .created:
                return "–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω"
            case .paid:
                return "–ó–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω"
            case .shipped:
                return "–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"
            case .delivered:
                return "–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω"
            case .cancelled:
                return "–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω"
            }
        }
        
        // 1. –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —Å –ª–æ–≥–∏–∫–æ–π
        func canCancelOrder(status: OrderStatus) -> Bool {
            switch status {
            case .created, .paid: return true
            case .shipped, .delivered, .cancelled: return false
            }
        }
        
        func getNextStatus(current: OrderStatus) -> OrderStatus? {
            switch current {
            case .created: return .paid
            case .paid: return .shipped
            case .shipped: return .delivered
            default: return nil
            }
        }
        // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –í–°–ï —Å—Ç–∞—Ç—É—Å—ã —Å –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–æ–π
        
        // –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Å—Ç–∞—Ç—É—Å—ã
        let allStatuses: [OrderStatus] = [.created, .paid, .shipped, .delivered]
        
        // –ë–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–æ–≤
        func getStatusEmoji(status: OrderStatus) -> String {
            switch status {
            case .created: return "üìù"
            case .paid: return "üí≥"
            case .shipped: return "üöö"
            case .delivered: return "üì¶"
            case .cancelled: return "‚ùå"
            }
        }
        
        for status in allStatuses {
            let emoji = getStatusEmoji(status: status)
            let cancelIcon = canCancelOrder(status: status) ? "‚úÖ" : "‚ùå"
            
            print("\(emoji) \(getStatusDescription(status: status))")
            print("   –û—Ç–º–µ–Ω–∞: \(cancelIcon)")
            
            if let next = getNextStatus(current: status) {
                print("   ‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π: \(getStatusDescription(status: next))")
            }
            print()
        }
        /*  üìù –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω
         –û—Ç–º–µ–Ω–∞: ‚úÖ
         ‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π: –ó–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω
         
         üí≥ –ó–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω
         –û—Ç–º–µ–Ω–∞: ‚úÖ
         ‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π: –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
         
         üöö –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
         –û—Ç–º–µ–Ω–∞: ‚ùå
         ‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π: –ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω
         
         üì¶ –ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω
         –û—Ç–º–µ–Ω–∞: ‚ùå   */
    }
    
    static func task9_2d() {
        print("–ó–∞–¥–∞—á–∞ 9.2d.d: –°–æ–∑–¥–∞–π enum –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–¥–∞—á–∏ 'To-DO' –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º–∏.")
        
        enum TaskStatus {
            case new
            case inProgress
            case paused
            case completed
            case cancelled
        }
        
        func getTaskDescription(status: TaskStatus) -> String {
            switch status { // –¥–ª—è –∫–∞–∂–¥–æ–≥–æ case –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
            case .new: return "–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞"
            case .inProgress: return "–ó–∞–¥–∞—á–∞ –≤ —Ä–∞–±–æ—Ç–µ"
            case .paused: return "–ó–∞–¥–∞—á–∞ –Ω–∞ –ø–∞—É–∑–µ"
            case .completed: return "–ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
            case .cancelled: return "–ó–∞–¥–∞—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
            }
        }
        // 1. –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —Å –ª–æ–≥–∏–∫–æ–π
        func canEditTask(status: TaskStatus) -> Bool {
            switch status {
            case .new, .inProgress, .paused: return true
            case .completed, .cancelled: return false
            }
        }
        
        func getNextPossibleStatus(current: TaskStatus) -> [TaskStatus] {
            switch current {
            case .new: return [.inProgress, .cancelled]
            case .inProgress: return [.cancelled, .completed, .paused]
            case .paused: return [.inProgress, .cancelled]
            case .completed: return []
            case .cancelled: return []
            }
        }
        // ¬†–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –í–°–ï —Å—Ç–∞—Ç—É—Å—ã
        let allStatuses: [TaskStatus] = [.new, .inProgress, .paused, .completed, .cancelled]
        
        for status in allStatuses {
            print("–°—Ç–∞—Ç—É—Å: \(getTaskDescription(status: status))")
            print("–ú–æ–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å: \(canEditTask(status: status))")
            
            // –ü–ï–†–ï–ù–ï–°–ò –≠–¢–û–¢ –ö–û–î –°–Æ–î–ê, –í–ù–£–¢–†–¨ –¶–ò–ö–õ–ê:
            let nextStatuses = getNextPossibleStatus(current: status)
            if nextStatuses.isEmpty {
                print("–°–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã: –Ω–µ—Ç")
            } else {
                let statusNames = nextStatuses.map { getTaskDescription(status: $0) }
                print("–°–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã: \(statusNames.joined(separator: ", "))")
            }
            print("---")
        }
        /*  –ó–∞–¥–∞—á–∞ 9.2d.d: –°–æ–∑–¥–∞–π enum –¥–ª—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–¥–∞—á–∏ 'To-DO' –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º–∏.
         –°—Ç–∞—Ç—É—Å: –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞
         –ú–æ–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å: true
         –°–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã: –ó–∞–¥–∞—á–∞ –≤ —Ä–∞–±–æ—Ç–µ, –ó–∞–¥–∞—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞
         ---
         –°—Ç–∞—Ç—É—Å: –ó–∞–¥–∞—á–∞ –≤ —Ä–∞–±–æ—Ç–µ
         –ú–æ–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å: true
         –°–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã: –ó–∞–¥–∞—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞, –ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ó–∞–¥–∞—á–∞ –Ω–∞ –ø–∞—É–∑–µ
         ---
         –°—Ç–∞—Ç—É—Å: –ó–∞–¥–∞—á–∞ –Ω–∞ –ø–∞—É–∑–µ
         –ú–æ–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å: true
         –°–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã: –ó–∞–¥–∞—á–∞ –≤ —Ä–∞–±–æ—Ç–µ, –ó–∞–¥–∞—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞
         ---
         –°—Ç–∞—Ç—É—Å: –ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
         –ú–æ–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å: false
         –°–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã: –Ω–µ—Ç
         ---
         –°—Ç–∞—Ç—É—Å: –ó–∞–¥–∞—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞
         –ú–æ–∂–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å: false
         –°–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã: –Ω–µ—Ç   */
    }
    
    static func task9_2e() {
        print("–ó–∞–¥–∞—á–∞ 9.2.e: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ: —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º. –¶–µ–ª—å: —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        
        // –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - —Ç—Ä–∏ enums
        enum UserRole {
            case guest // –≥–æ—Å—Ç—å (–Ω–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —é–∑–µ—Ä)
            case user // –æ–±—ã—á–Ω—ã–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —é–∑–µ—Ä
            case editor // —Ä–µ–¥–∞–∫—Ç–æ—Ä (–º–æ–∂–µ—Ç —Ä–µ–¥–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç)
            case moderator // –º–æ–¥–µ—Ä–∞—Ç–æ—Ä (–º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å —á—É–∂–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç)
            case admin // –∞–¥–º–∏–Ω (–ø–æ–ª–Ω—ã–µ –ø—Ä–∞–≤–∞)
        }
        
        enum ResourceType {
            case profile // –ø—Ä–æ—Ñ–∏–ª—å —é–∑–µ—Ä–∞
            case article // —Å—Ç–∞—Ç—å—è / –ø—É–±–ª–∏–∫–∞—Ü–∏—è
            case comment // –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            case settings // –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã
            case userData // –¥–∞–Ω–Ω—ã–µ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        }
        
        enum Permission { // –î–æ—Å—Ç—É–ø?
            case none // –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –≤–æ–æ–±—â–µ
            case view // –º–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å
            case create // –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π
            case edit // –º–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
            case delete // –º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å
            case manage // –ø–æ–ª–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (–≤–∫–ª—é—á–∞—è –ø—Ä–∞–≤–∞ –¥—Ä—É–≥–∏—Ö)
        }
        // –∑–∞–¥–∞—á–∞ 1: –±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤. –†–µ–∞–ª–∏–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é
        func canAccess(role: UserRole, resource: ResourceType, permission: Permission) -> Bool {
            switch role {
            case .guest:
                switch resource {
                case .article, .comment: return permission == .view
                default:
                    return false
                }
            case .user:
                switch resource {
                case .article, .settings, .userData:
                    return permission == .view
                case .comment:
                    return permission == .view || permission == .create
                case .profile:
                    return permission == .view || permission == .edit
                default:
                    return false
                }
            case .editor:
                switch resource {
                case .article:
                    return permission == .view || permission == .create || permission == .edit
                case .comment, .profile, .settings, .userData:
                    return permission == .view
                default:
                    return false
                }
            case .moderator:
                switch resource {
                case .article, .comment:
                    return permission != .none && permission != .manage
                case .profile, .settings, .userData:
                    return permission == .view
                default:
                    return false
                }
            case .admin:
                return true
            }
        }
        /// –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï —Å –≤—ã–≤–æ–¥–æ–º –≤ –∫–æ–Ω—Å–æ–ª—å
        print("\nüß™ –¢–ï–°–¢–´ –°–ò–°–¢–ï–ú–´ –ü–†–ê–í –î–û–°–¢–£–ü–ê:")
        
        
        // –¢–µ—Å—Ç 1: –î–æ–ª–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å true
        let test1 = canAccess(role: .user, resource: .profile, permission: .edit)
        print("‚úÖ –Æ–∑–µ—Ä –º–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å: \(test1)")
        
        let test2 = canAccess(role: .moderator, resource: .article, permission: .delete)
        print("‚úÖ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å —Å—Ç–∞—Ç—å–∏: \(test2)")
        
        // –¢–µ—Å—Ç 2: –î–æ–ª–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å false
        let test3 = canAccess(role: .guest, resource: .settings, permission: .view)
        print("‚ùå –ì–æ—Å—Ç—å –Ω–µ –º–æ–∂–µ—Ç —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: \(test3)")
        
        let test4 = canAccess(role: .user, resource: .userData, permission: .edit)
        print("‚ùå –Æ–∑–µ—Ä –Ω–µ –º–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —á—É–∂–∏–µ –¥–∞–Ω–Ω—ã–µ: \(test4)")
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
        let test5 = canAccess(role: .admin, resource: .settings, permission: .manage)
        print("üëë –ê–¥–º–∏–Ω –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏: \(test5)")
        
        let test6 = canAccess(role: .editor, resource: .article, permission: .create)
        print("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–æ—Ä –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç–∞—Ç—å–∏: \(test6)")
    }
    /* üß™ –¢–ï–°–¢–´ –°–ò–°–¢–ï–ú–´ –ü–†–ê–í –î–û–°–¢–£–ü–ê:
     ‚úÖ –Æ–∑–µ—Ä –º–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å: true
     ‚úÖ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å —Å—Ç–∞—Ç—å–∏: true
     ‚ùå –ì–æ—Å—Ç—å –Ω–µ –º–æ–∂–µ—Ç —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: false
     ‚ùå –Æ–∑–µ—Ä –Ω–µ –º–æ–∂–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —á—É–∂–∏–µ –¥–∞–Ω–Ω—ã–µ: false
     üëë –ê–¥–º–∏–Ω –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏: true
     ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–æ—Ä –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç–∞—Ç—å–∏: true  */
    
    /*   –ü—Ä–æ—Å—Ç–æ –∑–∞–ø–æ–º–Ω–∏ –ß–ï–¢–´–†–ï —à–∞–≥–∞:
     1. Enum –¥–ª—è "–∫—Ç–æ" (—Ä–æ–ª–∏/—Å—Ç–∞—Ç—É—Å—ã)
     2. Enum –¥–ª—è "—á—Ç–æ" (—Ä–µ—Å—É—Ä—Å—ã/–æ–±—ä–µ–∫—Ç—ã)
     3. Enum –¥–ª—è "–¥–µ–π—Å—Ç–≤–∏–µ" (–ø—Ä–∞–≤–∞/–æ–ø–µ—Ä–∞—Ü–∏–∏)
     4. –§—É–Ω–∫—Ü–∏—è —Å switch(–∫—Ç–æ) ‚Üí switch(—á—Ç–æ)
     
     // –≠—Ç–æ –º–æ–π –ø—É—Ç—å:
     –°–µ–≥–æ–¥–Ω—è: "–ü–æ–Ω—è–ª–∞ —Å –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏"
     –ó–∞–≤—Ç—Ä–∞: "–ù–∞–ø–∏—à—É –ø–æ—Ö–æ–∂–µ–µ —Å –ø–∞—Ä–æ–π –æ—à–∏–±–æ–∫"
     –ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞: "–°–æ–∑–¥–∞–º —Å–≤–æ—é —Å–∏—Å—Ç–µ–º—É —Å –Ω—É–ª—è"  */
    
    static func task9_2f() {
        print("–ó–∞–¥–∞—á–∞ 9.2.f: –ó–∞–¥–∞—á–∞ 1: –°—Ç—Ä–∏–º–∏–Ω–≥ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ")
        
        enum Subscription { // –ø–æ–¥–ø–∏—Å–∫–∞
            case free // –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏
            case premium // –ø—Ä–µ–º–∏—É–º
            case pro // –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è
        }
        
        enum Content { // –∫–æ–Ω—Ç–µ–Ω—Ç
            case movie // —Ñ–∏–ª—å–º—ã–± –≤–∏–¥–µ–æ
            case series // —Å–µ—Ä–∏–∞–ª—ã
            case exclusive // —ç–∫—Å–∫–ª—é–∑–∏–≤
        }
        
        enum Action {
            case watch // —Å–º–æ—Ç—Ä–µ—Ç—å
            case download // —Å–∫–∞—á–∞—Ç—å
            case earlyAccess // —Ä–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø
        }
        
        // –†–µ–∞–ª–∏–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é:
        func canAccess(subscription: Subscription, content: Content, action: Action) -> Bool {
            switch subscription {
            case .free:
                switch content {
                case .movie, .series: return action == .watch
                case .exclusive:
                    return false
                }
            case .premium:
                switch content {
                case .movie, .series: return action == .watch || action == .download
                case .exclusive: return action == .watch
                }
            case .pro:
                return true
            }
        }
        print("üß™ –¢–ï–°–¢–´ –°–ò–°–¢–ï–ú–´ –î–û–°–¢–£–ü–ê:")
        print("‚ùå –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π: –≠–∫—Å–∫–ª—é–∑–∏–≤ + –†–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø: \(canAccess(subscription: .free, content: .exclusive, action: .earlyAccess))")
        print("‚úÖ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π: –§–∏–ª—å–º + –°–º–æ—Ç—Ä–µ—Ç—å: \(canAccess(subscription: .free, content: .movie, action: .watch))")
        print("‚ùå –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π: –§–∏–ª—å–º + –°–∫–∞—á–∞—Ç—å: \(canAccess(subscription: .free, content: .movie, action: .download))")
        print("‚ùå –ü—Ä–µ–º–∏—É–º: –≠–∫—Å–∫–ª—é–∑–∏–≤ + –°–∫–∞—á–∞—Ç—å: \(canAccess(subscription: .premium, content: .exclusive, action: .download))")
        print("‚úÖ –ü—Ä–µ–º–∏—É–º: –°–µ—Ä–∏–∞–ª + –°–∫–∞—á–∞—Ç—å: \(canAccess(subscription: .premium, content: .series, action: .download))")
        print("‚úÖ Pro: –≠–∫—Å–∫–ª—é–∑–∏–≤ + –†–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø: \(canAccess(subscription: .pro, content: .exclusive, action: .earlyAccess))")
        print("‚úÖ Pro: –§–∏–ª—å–º + –°–∫–∞—á–∞—Ç—å: \(canAccess(subscription: .pro, content: .movie, action: .download))")
    }
    /* üß™ –¢–ï–°–¢–´ –°–ò–°–¢–ï–ú–´ –î–û–°–¢–£–ü–ê:
     ‚ùå –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π: –≠–∫—Å–∫–ª—é–∑–∏–≤ + –†–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø: false
     ‚úÖ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π: –§–∏–ª—å–º + –°–º–æ—Ç—Ä–µ—Ç—å: true
     ‚ùå –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π: –§–∏–ª—å–º + –°–∫–∞—á–∞—Ç—å: false
     ‚ùå –ü—Ä–µ–º–∏—É–º: –≠–∫—Å–∫–ª—é–∑–∏–≤ + –°–∫–∞—á–∞—Ç—å: false
     ‚úÖ –ü—Ä–µ–º–∏—É–º: –°–µ—Ä–∏–∞–ª + –°–∫–∞—á–∞—Ç—å: true
     ‚úÖ Pro: –≠–∫—Å–∫–ª—é–∑–∏–≤ + –†–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø: true
     ‚úÖ Pro: –§–∏–ª—å–º + –°–∫–∞—á–∞—Ç—å: true  */
    
    static func task9_2g() {
        print("–ó–∞–¥–∞—á–∞ 9.2.g: –ó–∞–¥–∞—á–∞ 2: –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∞–∫–∫–∞—É–Ω—Ç–æ–≤")
        
        enum Plan {
            case trial // –ø—Ä–æ–±–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
            case student
            case teacher
            case school
        }
        
        enum Material {
            case lesson
            case quiz
            case exam
            case certificate
        }
        enum Operation {
            case view
            case attempt
            case create
            case grade
        }
        
        
        // –†–µ–∞–ª–∏–∑—É–π:
        func canPerform(plan: Plan, material: Material, operation: Operation) -> Bool {
            switch plan {
            case .trial:
                switch material {
                case .lesson: return operation == .view
                case .quiz, .exam, .certificate: return false // –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã
                }
            case .student:
                switch material {
                case .lesson, .quiz, .exam: return operation == .view || operation == .attempt
                case .certificate: return operation == .view
                }
            case .teacher:
                switch material {
                case .lesson, .quiz, .exam, .certificate: return operation == .view || operation == .attempt ||
                    operation == .create ||
                    operation == .grade
                }
            case .school:
                return true
            }
        }
        // –¢–µ—Å—Ç—ã
        print("üß™ –¢–ï–°–¢–´ –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–û–ô –ü–õ–ê–¢–§–û–†–ú–´:")
        print("‚ùå –ü—Ä–æ–±–Ω—ã–π: –£—Ä–æ–∫ + –°–æ–∑–¥–∞—Ç—å: \(canPerform(plan: .trial, material: .lesson, operation: .create))")
        print("‚úÖ –ü—Ä–æ–±–Ω—ã–π: –£—Ä–æ–∫ + –ü—Ä–æ—Å–º–æ—Ç—Ä: \(canPerform(plan: .trial, material: .lesson, operation: .view))")
        print("‚úÖ –°—Ç—É–¥–µ–Ω—Ç: –¢–µ—Å—Ç + –ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ: \(canPerform(plan: .student, material: .quiz, operation: .attempt))")
        print("‚ùå –°—Ç—É–¥–µ–Ω—Ç: –≠–∫–∑–∞–º–µ–Ω + –û—Ü–µ–Ω–∏—Ç—å: \(canPerform(plan: .student, material: .exam, operation: .grade))")
        print("‚úÖ –£—á–∏—Ç–µ–ª—å: –£—Ä–æ–∫ + –°–æ–∑–¥–∞—Ç—å: \(canPerform(plan: .teacher, material: .lesson, operation: .create))")
        print("‚úÖ –®–∫–æ–ª–∞: –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç + –û—Ü–µ–Ω–∏—Ç—å: \(canPerform(plan: .school, material: .certificate, operation: .grade))")
        
    } /* üß™ –¢–ï–°–¢–´ –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–û–ô –ü–õ–ê–¢–§–û–†–ú–´:
       ‚ùå –ü—Ä–æ–±–Ω—ã–π: –£—Ä–æ–∫ + –°–æ–∑–¥–∞—Ç—å: false
       ‚úÖ –ü—Ä–æ–±–Ω—ã–π: –£—Ä–æ–∫ + –ü—Ä–æ—Å–º–æ—Ç—Ä: true
       ‚úÖ –°—Ç—É–¥–µ–Ω—Ç: –¢–µ—Å—Ç + –ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ: true
       ‚ùå –°—Ç—É–¥–µ–Ω—Ç: –≠–∫–∑–∞–º–µ–Ω + –û—Ü–µ–Ω–∏—Ç—å: false
       ‚úÖ –£—á–∏—Ç–µ–ª—å: –£—Ä–æ–∫ + –°–æ–∑–¥–∞—Ç—å: true
       ‚úÖ –®–∫–æ–ª–∞: –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç + –û—Ü–µ–Ω–∏—Ç—å: true */
    
    static func task9_2h() {
        print("–ó–∞–¥–∞—á–∞ 9.2h: –§–∏—Ç–Ω–µ—Å-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –ø–æ —Ç–∏–ø–∞–º —á–ª–µ–Ω—Å—Ç–≤–∞")
        
        enum MembershipTier { // —É—Ä–æ–≤–µ–Ω—å —á–ª–µ–Ω—Å—Ç–≤–∞
            case basic, plus, coach, admin
        }
        enum WorkoutPlan { // –ø–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
            case standard, premium, custom, withNutrition
        }
        enum UserActivity {
            case view, start, customize, share
        }
        
        // –†–µ–∞–ª–∏–∑—É–π:
        func canDo(membershipTier: MembershipTier, workoutPlan: WorkoutPlan, userActivity: UserActivity) -> Bool {
            switch membershipTier {
            case .basic:
                switch workoutPlan {
                case .standard: return userActivity == .view
                case .premium, .custom, .withNutrition: return false // –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã
                }
            case .plus:
                switch workoutPlan {
                case .standard, .premium: return userActivity == .view || userActivity == .start
                case .custom, .withNutrition:
                    return false
                }
            case .coach:
                switch workoutPlan {
                case .standard, .premium, .custom, .withNutrition:
                    return true // coach –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞–Ω–æ–≤
                }
            case .admin:
                return true
            }
        }
        // –¢–µ—Å—Ç—ã
        print("üß™ –¢–ï–°–¢–´ –§–∏—Ç–Ω–µ—Å-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –ø–æ —Ç–∏–ø–∞–º —á–ª–µ–Ω—Å—Ç–≤–∞:")
        print("–£—Ä–æ–≤–µ–Ω—å - –Ω–∞—á–∞–ª—å–Ω—ã–π: \(canDo(membershipTier: .basic, workoutPlan: .standard, userActivity: .view))")
        print("–£—Ä–æ–≤–µ–Ω—å - –ø–ª—é—Å: \(canDo(membershipTier: .plus, workoutPlan: .premium, userActivity: .start))")
        print("–£—Ä–æ–≤–µ–Ω—å - —Ç—Ä–µ–Ω–µ—Ä: \(canDo(membershipTier: .coach, workoutPlan: .premium, userActivity: .customize))")
        print("–£—Ä–æ–≤–µ–Ω—å - –∞–¥–º–∏–Ω: \(canDo(membershipTier: .admin, workoutPlan: .withNutrition, userActivity: .share))")
        print("‚ùå Basic + Premium + Start: \(canDo(membershipTier: .basic, workoutPlan: .premium, userActivity: .start))")
    }
    /* üß™ –¢–ï–°–¢–´ –§–∏—Ç–Ω–µ—Å-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –ø–æ —Ç–∏–ø–∞–º —á–ª–µ–Ω—Å—Ç–≤–∞:
     –£—Ä–æ–≤–µ–Ω—å - –Ω–∞—á–∞–ª—å–Ω—ã–π: true
     –£—Ä–æ–≤–µ–Ω—å - –ø–ª—é—Å: true
     –£—Ä–æ–≤–µ–Ω—å - —Ç—Ä–µ–Ω–µ—Ä: true
     –£—Ä–æ–≤–µ–Ω—å - –∞–¥–º–∏–Ω: true
     ‚ùå Basic + Premium + Start: false */
    
    
    static func task9_2i() {
        print("–ó–∞–¥–∞—á–∞ 9.2i: –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω. –†–∞–∑–≥—Ä–∞–Ω–∏—á–∏—Ç—å –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –º–∞–≥–∞–∑–∏–Ω–µ")
        
        enum UserType {
            case guest, buyer, seller, manager
        }
        enum Section {
            case catalog, cart, orders, analytics
        }
        enum Access {
            case view, add, modify, delete
        }
        
        // –†–µ–∞–ª–∏–∑—É–π:
        func hasAccess(user: UserType, section: Section, access: Access) -> Bool {
            switch user {
            case .guest:
                switch section {
                case .catalog: return access == .view
                case .cart, .orders, .analytics: return false
                }
            case .buyer:
                switch section {
                case .catalog, .cart, .orders: return access == .view || access == .add
                case .analytics: return false
                }
            case .seller:
                switch section {
                case .catalog: return access == .view || access == .modify || access == .add
                case .orders:
                    return access == .view || access == .modify
                case .analytics: return access == .view
                case .cart:
                    return false
            
                }
            case .manager:
                return true
            }
        }

    // –¢–µ—Å—Ç—ã
       print("üß™ –¢–ï–°–¢–´ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞:")
       print("üë§ –ì–æ—Å—Ç—å + –ö–∞—Ç–∞–ª–æ–≥ + –ü—Ä–æ—Å–º–æ—Ç—Ä: \(hasAccess(user: .guest, section: .catalog, access: .view))")
       print("üë§ –ì–æ—Å—Ç—å + –ö–æ—Ä–∑–∏–Ω–∞ + –î–æ–±–∞–≤–∏—Ç—å: \(hasAccess(user: .guest, section: .cart, access: .add))")
       print("üõí –ü–æ–∫—É–ø–∞—Ç–µ–ª—å + –ö–æ—Ä–∑–∏–Ω–∞ + –î–æ–±–∞–≤–∏—Ç—å: \(hasAccess(user: .buyer, section: .cart, access: .add))")
       print("üõí –ü–æ–∫—É–ø–∞—Ç–µ–ª—å + –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ + –ü—Ä–æ—Å–º–æ—Ç—Ä: \(hasAccess(user: .buyer, section: .analytics, access: .view))")
       print("üè™ –ü—Ä–æ–¥–∞–≤–µ—Ü + –ö–∞—Ç–∞–ª–æ–≥ + –ò–∑–º–µ–Ω–∏—Ç—å: \(hasAccess(user: .seller, section: .catalog, access: .modify))")
       print("üè™ –ü—Ä–æ–¥–∞–≤–µ—Ü + –ó–∞–∫–∞–∑—ã + –£–¥–∞–ª–∏—Ç—å: \(hasAccess(user: .seller, section: .orders, access: .delete))")
       print("üëë –ú–µ–Ω–µ–¥–∂–µ—Ä + –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ + –£–¥–∞–ª–∏—Ç—å: \(hasAccess(user: .manager, section: .analytics, access: .delete))")
   }
    /* –ó–∞–¥–∞—á–∞ 9.2i: –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω. –†–∞–∑–≥—Ä–∞–Ω–∏—á–∏—Ç—å –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –º–∞–≥–∞–∑–∏–Ω–µ
     üß™ –¢–ï–°–¢–´ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞:
     üë§ –ì–æ—Å—Ç—å + –ö–∞—Ç–∞–ª–æ–≥ + –ü—Ä–æ—Å–º–æ—Ç—Ä: true
     üë§ –ì–æ—Å—Ç—å + –ö–æ—Ä–∑–∏–Ω–∞ + –î–æ–±–∞–≤–∏—Ç—å: false
     üõí –ü–æ–∫—É–ø–∞—Ç–µ–ª—å + –ö–æ—Ä–∑–∏–Ω–∞ + –î–æ–±–∞–≤–∏—Ç—å: true
     üõí –ü–æ–∫—É–ø–∞—Ç–µ–ª—å + –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ + –ü—Ä–æ—Å–º–æ—Ç—Ä: false
     üè™ –ü—Ä–æ–¥–∞–≤–µ—Ü + –ö–∞—Ç–∞–ª–æ–≥ + –ò–∑–º–µ–Ω–∏—Ç—å: true
     üè™ –ü—Ä–æ–¥–∞–≤–µ—Ü + –ó–∞–∫–∞–∑—ã + –£–¥–∞–ª–∏—Ç—å: false
     üëë –ú–µ–Ω–µ–¥–∂–µ—Ä + –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ + –£–¥–∞–ª–∏—Ç—å: true */
    
    static func task9_2j() {
        print("–ó–∞–¥–∞—á–∞ 9.2j: –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞. –û–≥—Ä–∞–Ω–∏—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–Ω–∏–≥–∞–º –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É –∏ —Å—Ç–∞—Ç—É—Å—É")
        
        
        enum ReaderLevel {
            case child, teen, adult, scholar
        }
        enum BookType {
            case children, fiction, academic, restricted
        }
        enum Reading {
            case preview, borrow, download, annotate
        }
        
        func canRead(level: ReaderLevel, book: BookType, reading: Reading) -> Bool {
            switch level {
            case .child:
                return book == .children && (reading == .preview || reading == .borrow)
            case .teen:
                return book != .academic && book != .restricted && reading != .annotate
            case .adult:
                return book != .restricted && reading != .annotate
            case .scholar:
                return true
            }
        }
        print("üìö –¢–ï–°–¢–´ –ë–ò–ë–õ–ò–û–¢–ï–ö–ò:")
        print("‚ñ´Ô∏èüë§ ‚Üí üéà –î–µ—Ç—Å–∫–∏–µ: \(canRead(level: .child, book: .children, reading: .preview))")
        print("‚ñ´Ô∏èüë§ ‚Üí üìñ –•—É–¥–æ–∂–µ—Å—Ç–≤: \(canRead(level: .child, book: .fiction, reading: .download))")
        print("‚ñ´Ô∏èüë• ‚Üí üéì –ê–∫–∞–¥–µ–º–∏—è: \(canRead(level: .teen, book: .academic, reading: .annotate))")
        print("‚ñ´Ô∏èüë• ‚Üí üìö –•—É–¥–æ–∂–µ—Å—Ç–≤: \(canRead(level: .teen, book: .fiction, reading: .borrow))")
        print("‚ñ™Ô∏èüßç ‚Üí üîû –û–≥—Ä–∞–Ω–∏—á: \(canRead(level: .adult, book: .restricted, reading: .annotate))")
        print("‚ñ™Ô∏èüßç ‚Üí üíæ –°–∫–∞—á–∞—Ç—å: \(canRead(level: .adult, book: .fiction, reading: .download))")
        print("‚ñ™Ô∏èüë§üéì ‚Üí üîì –í—Å–µ: \(canRead(level: .scholar, book: .restricted, reading: .annotate))")
    }
    /* üìö –¢–ï–°–¢–´ –ë–ò–ë–õ–ò–û–¢–ï–ö–ò:
     ‚ñ´Ô∏èüë§ ‚Üí üéà –î–µ—Ç—Å–∫–∏–µ: true
     ‚ñ´Ô∏èüë§ ‚Üí üìñ –•—É–¥–æ–∂–µ—Å—Ç–≤: false
     ‚ñ´Ô∏èüë• ‚Üí üéì –ê–∫–∞–¥–µ–º–∏—è: false
     ‚ñ´Ô∏èüë• ‚Üí üìö –•—É–¥–æ–∂–µ—Å—Ç–≤: true
     ‚ñ™Ô∏èüßç ‚Üí üîû –û–≥—Ä–∞–Ω–∏—á: false
     ‚ñ™Ô∏èüßç ‚Üí üíæ –°–∫–∞—á–∞—Ç—å: true
     ‚ñ™Ô∏èüë§üéì ‚Üí üîì –í—Å–µ: true */
    
    static func task9_3() {
        print("–ó–∞–¥–∞—á–∞ 9.3: ..")
        
    }
    static func task9_4() {
        print("–ó–∞–¥–∞—á–∞ 9.3: ..")
    }
}
/* üìÅ Project/
        ‚îú‚îÄ‚îÄ üé® task9_2b.swift - Colors with HEX codes
        ‚îú‚îÄ‚îÄ üì¶ task9_2c.swift - Order status system
        ‚îú‚îÄ‚îÄ ‚úÖ task9_2d.swift - To-Do task manager
        ‚îî‚îÄ‚îÄ üîê task9_2e.swift - Advanced access rights system  */
