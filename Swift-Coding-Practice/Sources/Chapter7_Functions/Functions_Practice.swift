//
//  Functions-Practice.swift
//  Swift-Coding-Practice
//
//  Created by –í–∞–ª–µ—Ä–∏—è –ü–æ–Ω–æ–º–∞—Ä–µ–≤–∞ on 16.09.2025.
//
import Foundation

public struct Chapter7_Functions {
    public static func runAllTasks() {
        print("=== –ì–ª–∞–≤–∞ 7: –§—É–Ω–∫—Ü–∏–∏ ===")
        task7_1()
        task7_2()
        task7_3()
        task7_4()
        task7_5()
        // Functions: Advanced Level
        task7a_1()
        task7a_2()
        task7a_3()
    } // –î–æ–±–∞–≤–ª—è–π –Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ —Ç—É—Ç
    
    static func task7_1() {
        print("–ó–∞–¥–∞—á–∞ 7.1: –°–æ–∑–¥–∞–π —Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏: 1-–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ Int –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –µ–≥–æ –ø–æ –ø–æ—Ä—è–¥–∫—É(–≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏–µ). –ü–æ—Å–ª–µ - —Ä–∞—Å–ø–µ—á–∞—Ç—ã–≤–∞–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å. 2-–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ String, –º–µ–Ω—è–µ—Ç 1, 2 –∏ 3 —ç–ª–µ–º–µ–Ω—Ç—ã –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É. –ü–æ—Å–ª–µ - —Ä–∞—Å–ø–µ—á–∞—Ç—ã–≤–∞–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å. 3-—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫ –∏ —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç –∏—Ö. –ü–æ—Å–ª–µ - —Ä–∞—Å–ø–µ—á–∞—Ç—ã–≤–∞–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å.")
        
        // var 1 –º–µ–Ω—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤
        func first(nums: [Int]) {
            let numsSorted = nums.sorted(by: <)
            print(numsSorted)
        }
        first(nums: [1, 4, 2, 7, 3, 8, 1, 9, 2]) // [1, 1, 2, 2, 3, 4, 7, 8, 9]
        
        func second(figures: inout [String]) {
            if figures.count >= 3 {
                (figures[0], figures[1], figures[2]) = (figures[1], figures[2], figures[0]) // –ú–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏ –ø–µ—Ä–≤—ã–π, –≤—Ç–æ—Ä–æ–π –∏ —Ç—Ä–µ—Ç–∏–π —ç–ª–µ–º–µ–Ω—Ç—ã
                print(figures) //["Queen", "Rook", "King", "Bishop", "Knight", "Rawn"]
                figures.sort()
            }
        }
        var chessPieces = ["King", "Queen", "Rook", "Bishop", "Knight", "Rawn"]
        
        second(figures: &chessPieces)
        print(chessPieces) // ["Bishop", "King", "Knight", "Queen", "Rawn", "Rook"]
        
        // –≤–∞—Ä.2 —Å–æ–∑–¥–∞–µ–º –ù–û–í–´–ô –º–∞—Å—Å–∏–≤
        
        func second(types: [String]) -> [String] {
            
            guard types.count >= 3 else { return types.sorted() }
            var result = types
            (result[0], result[1], result[2]) = (result[1], result[2], result[0])
            return result.sorted()
        }
      
        let weatherPieces = ["Sunnny", "Cloudly", "Rainy", "Snowy", "Windy", "Foggy", "Stormy", "Mist", "Over all Spain the sky is clouless"]
let res = second(types: weatherPieces)
print(res) // –û–¢–°–û–†–¢–ò–†–û–í–ê–ù–ù–´–ô –º–∞—Å—Å–∏–≤ –ü–û–°–õ–ï –∑–∞–º–µ–Ω—ã –ø–µ—Ä–≤—ã—Ö 3-—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ["Cloudly", "Foggy", "Mist", "Over all Spain the sky is clouless", "Rainy", "Snowy", "Stormy", "Sunnny", "Windy"]
print(weatherPieces) // –ò–°–•–û–î–ù–´–ô –ù–ï–∏–∑–º–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤: ["Sunnny", "Cloudly", "Rainy", "Snowy", "Windy", "Foggy", "Stormy", "Mist", "Over all Spain the sky is clouless"]
    /* –ö–ª—é—á–µ–≤—ã–µ —Ä–∞–∑–ª–∏—á–∏—è:
     
     Inout (—à–∞—Ö–º–∞—Ç—ã)    –í–æ–∑–≤—Ä–∞—Ç –º–∞—Å—Å–∏–≤–∞ (–ø–æ–≥–æ–¥–∞)
     –ò–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π?    ‚úÖ –î–∞    ‚ùå –ù–µ—Ç
     –ó–∞—â–∏—Ç–∞ guard?    ‚ùå –ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ    ‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
     –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤?    –ù–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
     –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?    –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ    –ö–æ–≥–¥–∞ –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –æ—Å—Ç–∞—Ç—å—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º–∏
     –ü–æ—á–µ–º—É –≤ –ø–æ–≥–æ–¥–Ω–æ–º –≤–∞—Ä–∏–∞–Ω—Ç–µ guard –≤–∞–∂–Ω–µ–µ:

     –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
     –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç–æ–π/–∫–æ—Ä–æ—Ç–∫–∏–π - –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å —á—Ç–æ-—Ç–æ –æ—Å–º—ã—Å–ª–µ–Ω–Ω–æ–µ
     guard –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –º—ã –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ª—É—á–∞–∏
     –¢—ã –∞–±—Å–æ–ª—é—Ç–Ω–æ –ø—Ä–∞–≤–∞! üëè –û—Ç–ª–∏—á–Ω–æ–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ!
     feat: –¥–æ–±–∞–≤–ª–µ–Ω—ã –¥–≤–µ –≤–µ—Ä—Å–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∞—Å—Å–∏–≤–∞–º–∏

     - Inout –≤–µ—Ä—Å–∏—è: –∏–∑–º–µ–Ω—è–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ (–ø–æ–¥—Ö–æ–¥ –º—É—Ç–∞—Ü–∏–∏)
     - Guard –≤–µ—Ä—Å–∏—è: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥)
     - –û–±–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç –∑–∞–º–µ–Ω—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É
     - –î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ edge cases —á–µ—Ä–µ–∑ guard */
}
    
    static func task7_2() {
        print("–ó–∞–¥–∞—á–∞ 7.1: –°–æ–∑–¥–∞–π ...")
    }
    static func task7_3() {
        print("–ó–∞–¥–∞—á–∞ 7.1: –°–æ–∑–¥–∞–π ...")
    }
    static func task7_4() {
        print("–ó–∞–¥–∞—á–∞ 7.1: –°–æ–∑–¥–∞–π ...")
    }
    static func task7_5() {
        print("–ó–∞–¥–∞—á–∞ 7.1: –°–æ–∑–¥–∞–π ...")
    }
    // Functions: Advanced Level
    static func task7a_1() {
        print("–ó–∞–¥–∞—á–∞ 7.1: –°–æ–∑–¥–∞–π ...")
    }
    static func task7a_2() {
        print("–ó–∞–¥–∞—á–∞ 7.1: –°–æ–∑–¥–∞–π ...")
    }
    static func task7a_3() {
        print("–ó–∞–¥–∞—á–∞ 7.1: –°–æ–∑–¥–∞–π ...")
    }
}
